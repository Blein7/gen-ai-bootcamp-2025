version: '3.8'

services:
  listening-comp:
    build:
      context: ./listening-comp
      dockerfile: Dockerfile
    ports:
      - "8501:8000"  # Changed to 8501 for Streamlit's default port
    volumes:
      - ./listening-comp:/app
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - chroma-db
    networks:
      - app-network

  song-vocab:
    build:
      context: ./song-vocab
      dockerfile: Dockerfile
    ports:
      - "8004:8000"  # Changed from 8000:8000 to avoid conflict
    volumes:
      - ./song-vocab:/app
      - ./song-vocab/output:/app/output
    environment:
      - OLLAMA_HOST=http://ollama:11434
    depends_on:
      - ollama
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  # For accessing host services

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - app-network

  writing-practice:
    build:
      context: ./writing-practice
      dockerfile: Dockerfile
    ports:
      - "8503:8503"
    volumes:
      - ./writing-practice:/app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - lang-portal-backend
    networks:
      app-network:
        aliases:
          - writing-practice
    extra_hosts:
      - "localhost:host-gateway"

  lang-portal-backend:
    build:
      context: ./lang-portal/backend-flask
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./lang-portal/backend-flask:/app
      - backend_data:/app/data
      - db_data:/app/instance
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:///instance/words.db
    networks:
      app-network:
        aliases:
          - lang-portal-backend
          - localhost

  lang-portal-frontend:
    build:
      context: ./lang-portal/frontend-react
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - lang-portal-backend
    networks:
      - app-network

  chroma-db:
    image: chromadb/chroma
    ports:
      - "8002:8000"
    volumes:
      - chroma_data:/chroma/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  chroma_data:
  backend_data:
  db_data:
  ollama_data: